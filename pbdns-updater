#!/bin/bash

helpinfo() {
    echo ""
    echo "Usage: ./pbaupdate [OPTION] [VALUE]"
    echo "Updates IP address of porkbun.com DNS A record using porkbun API and ifconfig.me. Requires jq installed."
    echo "Requires option -f and .json with the key:VALUE pairs:"
    echo ""
    echo "  \"secretapikey\":       Porkbun secret API key"
    echo "  \"apikey\":             Porkbun API key"
    echo "  \"domain\":             domain (domain.tld)"
    echo "  \"recordid\":           Porkbun A record ID"
    echo ""
    echo "Example: ./pbaupdate -f update.json"
    echo ""
}

jsonreadfail() {
    echo "ERROR: There was a problem reading the .json file. Stopping..."
    exit
}

recordretreivefail() {
    echo "ERROR: There was a problem retrieving the Porkbun A record. Stopping..."
    exit
}

ifconfigfail() {
    echo "ERROR: There was a problem communicating with ficonfig.me. Stopping..."
    exit
}

while getopts f:h flag; do
  case "${flag}" in
    f) file=${OPTARG};;
    h)
        helpinfo
        exit;;
  esac
done

secretapikey=$(jq '.secretapikey' $file) || jsonreadfail
secretapikey="${secretapikey//\"}"
apikey=$(jq '.apikey' $file) || jsonreadfail
apikey="${apikey//\"}"
recordid=$(jq '.recordid' $file) || jsonreadfail
recordid="${recordid//\"}"
domain=$(jq '.domain' $file) || jsonreadfail
domain="${domain//\"}"
recordtype="A"

echo "Domain: \"$domain\""

payload_json=$(
    jq --null-input \
        --arg secretapikey "$secretapikey" \
        --arg apikey "$apikey" \
        '$ARGS.named'
)

echo "Retrieving IP addresses..."

response_json=$(curl -s -X POST -H "Content-Type: application/json" -d "$payload_json" https://porkbun.com/api/json/v3/dns/retrieveByNameType/$domain/A)
response=$(jq '.status' <<< "$response_json")
if [[ $response == "ERROR" ]] ; then
    recordretreivefail
fi

oldip=$(jq '.records[]' <<< "$response_json" | jq '.content')
oldip="${oldip//\"}"
echo "Porkbun A record: $oldip"

newip=$(curl -s ifconfig.me) 
echo "Current IP address: $newip" || ifconfigfail
if [[ $newip == $oldip ]] ; then
    echo "IP address has not changed. Stopping..."
    exit
    elif [[ $newip =~ [^0-9.] ]]; then
    echo "New IP address looks strange. Stopping..." 
    exit
fi

update_json=$(
    jq --null-input \
        --arg secretapikey "$secretapikey" \
        --arg apikey "$apikey" \
        --arg name "" \
        --arg type "$recordtype" \
        --arg content "$newip" \
        '$ARGS.named'
)
echo "Created new A record JSON payload."

result_json=$(curl -s -X POST -H "Content-Type: application/json" -d "$update_json" https://porkbun.com/api/json/v3/dns/edit/$domain/$recordid)
result=$(jq '.status' <<< "$result_json")

if [[ $result == "SUCCESS" ]] ; then
    echo "SUCCESS: Updated Porkbun A record for barba.link."
    exit
    else
    echo "ERROR: Something went wrong."
    exit
fi